# Snakefile.20.quantitation

targets(expand('quantitations/{sample}.gspace/refseq.pickle', sample=list(CLIP_SAMPLES)))


rule build_genome_positional_db:
    input: 'alignments/{sample}.split/done'
    output: 'quantitations/{sample}.gspace/done'
    threads: {( THREADS )} # consider memory limit
    version: "1"
    run:
        inputdir = os.path.dirname(input[0])
        outputdir = os.path.dirname(output[0])
        threads = 8 # limit number of parallel processes for memory limit

        #with TemporaryDirectory(outputdir) as bamtmpdir:
        #    shell('bamtools split -in {input} -reference -stub "{bamtmpdir}/" -refPrefix ""')
        shell('{BUILD_POSITIONALDB_GENOME_CMD} {threads} {inputdir} {outputdir}')


rule count_refseq_in_gspace:
    input: 'quantitations/{sample}.gspace/done'
    output: 'quantitations/{sample}.gspace/refseq.pickle'
    version: "2"
    threads: {( THREADS )}
    run:
        gspacedir = os.path.dirname(input[0])
        refseqdb = 'resources/{species}/nrRefSeq.db'.format(species=SAMPLE_SPECIES[wildcards.sample])
        shell('{COUNT_REFSEQ_IN_GSPACE_CMD} --parallel {threads} --output {output} \
                    --refflat-db {refseqdb} --array-dir {gspacedir}')

